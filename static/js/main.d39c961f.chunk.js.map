{"version":3,"sources":["components/Radio.js","components/EmployeesItem.js","utils/helper.js","pages/EmployeesContainer.js","components/ActiveEmployeesItem.js","pages/ActiveEmployeesContainer.js","App.js","index.js"],"names":["Radio","id","handleChange","useContext","Context","isChecked","localStorage","getItem","defaultChecked","onChange","event","target","value","type","name","EmployeesList","letter","employees","isActive","style","margin","textAlign","width","fontWeight","map","firstName","lastName","color","length","months","January","February","March","April","May","June","July","August","September","October","November","December","formatDate","dateObj","Date","toLocaleString","month","sortedMonths","first","Object","keys","sort","a","b","FormattedDate","dateToMonth","getDate","getFullYear","EmployeesContainer","props","display","flexDirection","flexWrap","Array","from","e","i","x","String","fromCharCode","EmployeesItem","employeeData","filter","item","localeCompare","ActiveEmployeesItem","activeIds","sortedEmployees","useState","activeEmployees","setActiveEmployees","useEffect","person","dob","ActiveEmployeesContainer","allEmployees","shouldRenderList","values","some","createContext","App","setEmployeeData","array","forEach","key","push","localStorageSelectedValuesArray","activeIdValues","setActiveIdValues","axios","get","then","response","data","catch","error","console","log","setItem","Provider","newState","includes","className","activeArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAsCeA,EAlCD,SAAC,GAAY,IAAVC,EAAS,EAATA,GACTC,EAAeC,qBAAWC,GAC1BC,EAAyC,SAA7BC,aAAaC,QAAQN,GAEvC,OACE,gCACE,uBACEO,gBAAiBH,EACjBI,SAAU,SAACC,GACTR,EAAaQ,EAAMC,OAAOC,QAE5BC,KAAK,QACLD,MAAOX,EACPa,KAAI,UAAKb,EAAL,gBARR,aAWE,uBACEO,eAAgBH,EAChBI,SAAU,SAACC,GACTR,EAAaQ,EAAMC,OAAOC,QAE5BC,KAAK,QACLD,MAAOX,EACPa,KAAI,UAAKb,EAAL,gBAlBR,aC8BWc,EApCO,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACzBC,EAAW,SAACjB,GAAD,MAAqC,SAA7BK,aAAaC,QAAQN,IAE9C,OACE,sBAAKkB,MAAO,CAAEC,OAAQ,GAAIC,UAAW,OAAQC,MAAO,OAApD,UACE,mBAAGH,MAAO,CAAEI,WAAY,OAAxB,SAAkCP,IACjCC,EAAUO,KAAI,gBAAGvB,EAAH,EAAGA,GAAIwB,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,SAAlB,OACb,gCACE,oBACEP,MAAO,CACLQ,MAAOT,EAASjB,GAAM,OAAS,QAC/BsB,WAAY,OAHhB,UAMGE,EANH,IAMeC,KAEf,cAAC,EAAD,CAAOzB,GAAIA,MATHA,MAYU,IAArBgB,EAAUW,QAAgB,iDCtB3BC,EAAS,CACbC,QAAS,EACTC,SAAU,EACVC,MAAO,EACPC,MAAO,EACPC,IAAK,EACLC,KAAM,EACNC,KAAM,EACNC,OAAQ,EACRC,UAAW,EACXC,QAAS,GACTC,SAAU,GACVC,SAAU,IAaCC,EAAa,SAACC,GAEzB,OADgB,IAAIC,KAAKD,GACVE,eAAe,QAAS,CAAEC,MAAO,UAkBrCC,EAAe,kBATdC,EAFaN,EAAW,IAAIE,MAG1BK,OAAOC,KAAKrB,GACbsB,MACX,SAACC,EAAGC,GAAJ,OACGxB,EAAOuB,GAAKvB,EAAOmB,KAAWnB,EAAOwB,GAAKxB,EAAOmB,KAClDnB,EAAOuB,GAAKvB,EAAOwB,MALZ,IAACL,GAiBDM,EAAgB,SAACX,GAC5BA,EAAU,IAAIC,KAAKD,GACnB,IAAMY,EAAcb,EAAWC,GAC/B,OACEA,EAAQa,UACR,IACAD,EACA,KACAZ,EAAQc,cACR,SC1BWC,EAhCY,SAACC,GAC1B,OACE,qBACExC,MAAO,CACLyC,QAAS,OACTC,cAAe,MACfC,SAAU,OACVxC,MAAO,OALX,SD0CYyC,MAAMC,KAAKD,MAAM,KAAKvC,KAAI,SAACyC,EAAGC,GAAJ,OAAUA,EAAI,MAC/B1C,KAAI,SAAC2C,GAAD,OAAOC,OAAOC,aAAaF,MCnC9B3C,KAAI,SAACR,GAAD,OACtB,cAACsD,EAAD,CAEEtD,OAAQA,EACRC,UAAW0C,EAAMY,aACdC,QAAO,SAACC,GAAD,OAAUA,EAAKhD,UAAU,KAAOT,KACvCmC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE3B,UAAUiD,cAAcrB,EAAE5B,eAJzCT,SCqBA2D,EAjCa,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,gBAAiB/B,EAAY,EAAZA,MACzD,EAA8CgC,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAUA,OARAC,qBAAU,WACRD,EACEH,EAAgBL,QACd,SAACU,GAAD,MAAgD,SAApC5E,aAAaC,QAAQ2E,EAAOjF,UAG3C,CAAC2E,EAAWC,IAGb,+BACE,6BAAK/B,IACuB,IAA3BiC,EAAgBnD,QAAgB,6CAChCmD,EAAgBnD,OAAS,GACxBmD,EAAgBvD,KAAI,gBAAGvB,EAAH,EAAGA,GAAIwB,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,SAAUyD,EAA5B,EAA4BA,IAA5B,OAClB,6BACE,8BACG1D,EADH,IACeC,EADf,MAC4B4B,EAAc6B,OAFnClF,UCiBJmF,EAhCkB,SAAC,GAAiC,IAA/BR,EAA8B,EAA9BA,UAAWS,EAAmB,EAAnBA,aACvCC,EHwBCrC,OAAOsC,OAAOjF,cAAckF,MAAK,SAACf,GAAD,MAAmB,SAATA,KGvBlD,OACE,sBAAKtD,MAAO,CAAEE,UAAW,SAAUC,MAAO,OAA1C,UACE,qDACEgE,GAAoB,wDACrBA,GACCvC,IAAevB,KAAI,SAACsB,GAAD,OACjB,cAAC,EAAD,CAEEA,MAAOA,EACP8B,UAAWA,EACXC,gBAAiBQ,EAAab,QAAO,SAACU,GACpC,OAAOxC,EAAWwC,EAAOC,OAASrC,MAJ/BA,UCGJ1C,EAAUqF,0BA+CRC,MA7Cf,WACE,MAAwCZ,mBAAS,IAAjD,mBAAOP,EAAP,KAAqBoB,EAArB,KAEA,EAA4Cb,mBJRC,WAC7C,IAAIc,EAAQ,GAMZ,OALA3C,OAAOC,KAAK5C,cAAcuF,SAAQ,SAACC,GACP,SAAtBxF,aAAawF,IACfF,EAAMG,KAAKD,MAGRF,EIELI,IADF,mBAAOC,EAAP,KAAuBC,EAAvB,KA6BA,OAXAjB,qBAAU,WAjCHkB,IACJC,IAAI,kEACJC,MAAK,SAACC,GACL,OAAOA,EAASC,QAEjBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MA4BMJ,MAAK,SAAC9B,GACxBA,EAAasB,SAAQ,SAACpB,GACkB,OAAlCnE,aAAaC,QAAQkE,EAAKxE,KAC5BK,aAAasG,QAAQnC,EAAKxE,IAAI,MAGlC0F,EAAgBpB,QAEjB,IAGD,cAACnE,EAAQyG,SAAT,CAAkBjG,MA1BC,SAACX,GACpB,IAAI6G,EAAQ,YAAOb,GAEfa,EAASC,SAAS9G,IACpBK,aAAasG,QAAQ3G,GAAI,GACzB6G,EAAWA,EAAStC,QAAO,SAACC,GAAD,OAAUA,IAASxE,OAE9C6G,EAAQ,sBAAOA,GAAP,CAAiB7G,IACzBK,aAAasG,QAAQ3G,GAAI,IAG3BiG,EAAkBY,IAelB,SACE,sBAAKE,UAAU,MAAM7F,MAAO,CAAEyC,QAAS,QAAvC,UACE,cAAC,EAAD,CAAoBW,aAAcA,IAClC,cAAC,EAAD,CACE0C,YAAahB,EACbZ,aAAcd,UCtDxB2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d39c961f.chunk.js","sourcesContent":["import { useContext } from 'react';\r\nimport { Context } from '../App';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Radio = ({ id }) => {\r\n  const handleChange = useContext(Context);\r\n  const isChecked = localStorage.getItem(id) === 'true';\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        defaultChecked={!isChecked}\r\n        onChange={(event) => {\r\n          handleChange(event.target.value);\r\n        }}\r\n        type=\"radio\"\r\n        value={id}\r\n        name={`${id}_is_active`}\r\n      />\r\n      not active\r\n      <input\r\n        defaultChecked={isChecked}\r\n        onChange={(event) => {\r\n          handleChange(event.target.value);\r\n        }}\r\n        type=\"radio\"\r\n        value={id}\r\n        name={`${id}_is_active`}\r\n      />\r\n      active\r\n    </div>\r\n  );\r\n};\r\n\r\nRadio.propTypes = {\r\n  id: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Radio;\r\n","import PropTypes from 'prop-types';\r\nimport Radio from './Radio';\r\n\r\nconst EmployeesList = ({ letter, employees }) => {\r\n  const isActive = (id) => localStorage.getItem(id) === 'true';\r\n\r\n  return (\r\n    <div style={{ margin: 30, textAlign: 'left', width: '25%' }}>\r\n      <p style={{ fontWeight: '800' }}>{letter}</p>\r\n      {employees.map(({ id, firstName, lastName }) => (\r\n        <div key={id}>\r\n          <p\r\n            style={{\r\n              color: isActive(id) ? 'blue' : 'black',\r\n              fontWeight: '500'\r\n            }}\r\n          >\r\n            {firstName} {lastName}\r\n          </p>\r\n          <Radio id={id} />\r\n        </div>\r\n      ))}\r\n      {employees.length === 0 && <p>No Employees</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nEmployeesList.propTypes = {\r\n  letter: PropTypes.string.isRequired,\r\n  employees: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      firstName: PropTypes.string.isRequired,\r\n      lastName: PropTypes.string.isRequired,\r\n      dob: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired\r\n};\r\n\r\nexport default EmployeesList;\r\n","const months = {\r\n  January: 1,\r\n  February: 2,\r\n  March: 3,\r\n  April: 4,\r\n  May: 5,\r\n  June: 6,\r\n  July: 7,\r\n  August: 8,\r\n  September: 9,\r\n  October: 10,\r\n  November: 11,\r\n  December: 12\r\n};\r\n\r\nexport const localStorageSelectedValuesArray = () => {\r\n  let array = [];\r\n  Object.keys(localStorage).forEach((key) => {\r\n    if (localStorage[key] === 'true') {\r\n      array.push(key);\r\n    }\r\n  });\r\n  return array;\r\n};\r\n\r\nexport const formatDate = (dateObj) => {\r\n  const newDate = new Date(dateObj);\r\n  return newDate.toLocaleString('en-us', { month: 'long' });\r\n};\r\n\r\nexport const shouldRenderData = () => {\r\n  return Object.values(localStorage).some((item) => item === 'true');\r\n};\r\n\r\nconst currentMonth = () => formatDate(new Date());\r\n\r\nconst sort = (first) => {\r\n  const array = Object.keys(months);\r\n  return array.sort(\r\n    (a, b) =>\r\n      (months[a] < months[first]) - (months[b] < months[first]) ||\r\n      months[a] - months[b]\r\n  );\r\n};\r\n\r\nexport const sortedMonths = () => sort(currentMonth());\r\n\r\nexport const getAlphabetArray = () => {\r\n  const alpha = Array.from(Array(26)).map((e, i) => i + 65);\r\n  const alphabet = alpha.map((x) => String.fromCharCode(x));\r\n  return alphabet;\r\n};\r\n\r\nexport const FormattedDate = (dateObj) => {\r\n  dateObj = new Date(dateObj);\r\n  const dateToMonth = formatDate(dateObj);\r\n  return (\r\n    dateObj.getDate() +\r\n    ' ' +\r\n    dateToMonth +\r\n    ', ' +\r\n    dateObj.getFullYear() +\r\n    ' year'\r\n  );\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport EmployeesItem from '../components/EmployeesItem';\r\nimport { getAlphabetArray } from '../utils/helper';\r\n\r\nconst EmployeesContainer = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        width: '75%'\r\n      }}\r\n    >\r\n      {getAlphabetArray().map((letter) => (\r\n        <EmployeesItem\r\n          key={letter}\r\n          letter={letter}\r\n          employees={props.employeeData\r\n            .filter((item) => item.firstName[0] === letter)\r\n            .sort((a, b) => a.firstName.localeCompare(b.firstName))}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nEmployeesContainer.propTypes = {\r\n  employeeData: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      firstName: PropTypes.string.isRequired,\r\n      lastName: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired\r\n};\r\n\r\nexport default EmployeesContainer;\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormattedDate } from '../utils/helper';\r\n\r\nconst ActiveEmployeesItem = ({ activeIds, sortedEmployees, month }) => {\r\n  const [activeEmployees, setActiveEmployees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setActiveEmployees(\r\n      sortedEmployees.filter(\r\n        (person) => localStorage.getItem(person.id) === 'true'\r\n      )\r\n    );\r\n  }, [activeIds, sortedEmployees]);\r\n\r\n  return (\r\n    <ul>\r\n      <h3>{month}</h3>\r\n      {activeEmployees.length === 0 && <p>No Employees</p>}\r\n      {activeEmployees.length > 0 &&\r\n        activeEmployees.map(({ id, firstName, lastName, dob }) => (\r\n          <li key={id}>\r\n            <p>\r\n              {firstName} {lastName} - {FormattedDate(dob)}\r\n            </p>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nActiveEmployeesItem.propTypes = {\r\n  month: PropTypes.string,\r\n  sortedEmployees: PropTypes.array,\r\n  activeIds: PropTypes.array\r\n};\r\n\r\nexport default ActiveEmployeesItem;\r\n","import PropTypes from 'prop-types';\r\nimport ActiveEmployeesItem from '../components/ActiveEmployeesItem';\r\nimport { formatDate } from '../utils/helper';\r\nimport { shouldRenderData } from '../utils/helper';\r\nimport { sortedMonths } from '../utils/helper';\r\n\r\nconst ActiveEmployeesContainer = ({ activeIds, allEmployees }) => {\r\n  const shouldRenderList = shouldRenderData();\r\n  return (\r\n    <div style={{ textAlign: 'center', width: '25%' }}>\r\n      <h2>Employees Birthday</h2>\r\n      {!shouldRenderList && <p>Employees list is empty</p>}\r\n      {shouldRenderList &&\r\n        sortedMonths().map((month) => (\r\n          <ActiveEmployeesItem\r\n            key={month}\r\n            month={month}\r\n            activeIds={activeIds}\r\n            sortedEmployees={allEmployees.filter((person) => {\r\n              return formatDate(person.dob) === month;\r\n            })}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nActiveEmployeesContainer.propTypes = {\r\n  activeIds: PropTypes.array,\r\n  allEmployees: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      firstName: PropTypes.string.isRequired,\r\n      lastName: PropTypes.string.isRequired,\r\n      dob: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired\r\n};\r\n\r\nexport default ActiveEmployeesContainer;\r\n","import { useState, useEffect, createContext } from 'react';\nimport axios from 'axios';\nimport './styles/App.css';\nimport EmployeesContainer from './pages/EmployeesContainer';\nimport ActiveEmployeesContainer from './pages/ActiveEmployeesContainer';\nimport { localStorageSelectedValuesArray } from './utils/helper';\n\nconst fetchEmployeeData = () => {\n  return axios\n    .get('https://yalantis-react-school-api.yalantis.com/api/task0/users')\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const Context = createContext();\n\nfunction App() {\n  const [employeeData, setEmployeeData] = useState([]);\n\n  const [activeIdValues, setActiveIdValues] = useState(\n    localStorageSelectedValuesArray()\n  );\n\n  const handleChange = (id) => {\n    let newState = [...activeIdValues];\n\n    if (newState.includes(id)) {\n      localStorage.setItem(id, false);\n      newState = newState.filter((item) => item !== id);\n    } else {\n      newState = [...newState, id];\n      localStorage.setItem(id, true);\n    }\n\n    setActiveIdValues(newState);\n  };\n\n  useEffect(() => {\n    fetchEmployeeData().then((employeeData) => {\n      employeeData.forEach((item) => {\n        if (localStorage.getItem(item.id) === null) {\n          localStorage.setItem(item.id, false);\n        }\n      });\n      setEmployeeData(employeeData);\n    });\n  }, []);\n\n  return (\n    <Context.Provider value={handleChange}>\n      <div className=\"App\" style={{ display: 'flex' }}>\n        <EmployeesContainer employeeData={employeeData} />\n        <ActiveEmployeesContainer\n          activeArray={activeIdValues}\n          allEmployees={employeeData}\n        />\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}